"""intial_migration

Revision ID: c620a2a692ed
Revises: 
Create Date: 2024-05-20 12:29:31.709458

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c620a2a692ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('domain', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_users_created_by_users')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('fk_users_deleted_by_users')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('fk_users_updated_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', 'name', 'domain', 'deleted_at', name=op.f('uq_users_email')),
    sa.UniqueConstraint('id', name=op.f('uq_users_id'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=False)

    op.create_table('movies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('genre', sa.String(length=128), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], name=op.f('fk_movies_client_id_users')),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_movies_created_by_users')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('fk_movies_updated_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_movies')),
    sa.UniqueConstraint('client_id', 'title', 'deleted_at', name=op.f('uq_movies_client_id')),
    sa.UniqueConstraint('id', name=op.f('uq_movies_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movies')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
